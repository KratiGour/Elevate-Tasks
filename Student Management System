import java.util.*;

class Student {
    int id;
    String name;
    double marks;

    Student(int id, String name, double marks) {
        this.id = id;
        this.name = name;
        this.marks = marks;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getMarks() {
        return marks;
    }

    public void setMarks(double marks) {
        this.marks = marks;
    }

    @Override
    public String toString() {
        return "ID: " + id + ", Name: " + name + ", Marks: " + marks;
    }
}

public class StudentRecordManagementSystem {
    public static void main(String[] args) {
        ArrayList<Student> student = new ArrayList<>();
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("Student Record Management\n");
            System.out.println("1. Add\n2. View\n3. Update\n4. Delete\n5. Exit");
            System.out.print("Enter your choice: ");
            int choice = sc.nextInt();
            sc.nextLine(); 

            switch (choice) {
                case 1:
                    System.out.print("Enter Id: ");
                    int id = sc.nextInt();
                    sc.nextLine();

                    System.out.print("Enter name: ");
                    String name = sc.nextLine();

                    System.out.print("Enter marks: ");
                    double marks = sc.nextDouble();
                    sc.nextLine(); 

                    student.add(new Student(id, name, marks));
                    System.out.println("Student added.");
                    break;
                case 2:
                    if (student.isEmpty()) {
                        System.out.println("No record found.");
                    } else {
                        for (Student s : student) {
                            System.out.println(s);
                        }
                    }
                    break;
                case 3:
                    System.out.print("Enter ID of student to update: ");
                    id = sc.nextInt();
                    sc.nextLine();

                    boolean found = false;
                    for (Student s : student) {
                        if (s.getId() == id) {
                            System.out.print("Enter new name: ");
                            s.setName(sc.nextLine());
                            System.out.print("Enter new marks: ");
                            s.setMarks(sc.nextDouble());
                            sc.nextLine(); 
                            System.out.println("Student updated.");
                            found = true;
                            break;
                        }
                    }
                    if (!found) {
                        System.out.println("Student not found.");
                    }
                    break;
                case 4:
                    System.out.print("Enter ID of student to delete: ");
                    id = sc.nextInt();
                    sc.nextLine();
                    found = false;
                    for (int i = 0; i < student.size(); i++) {
                        if (student.get(i).getId() == id) {
                            student.remove(i);
                            System.out.println("Student deleted.");
                            found = true;
                            break;
                        }
                    }
                    if (!found) {
                        System.out.println("Student not found.");
                    }
                    break;
                case 5:
                    System.out.println("Exiting...");
                    sc.close();
                    return;
                default:
                    System.out.println("Invalid choice.");
            }
        }
    }
}
